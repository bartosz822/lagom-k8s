include "application"

play {
  server {
    pidfile.path = "/dev/null"
  }
  http.secret.key = "${APPLICATION_SECRET}"
}

akka {
    ## service runtime discovery method, uses simple dns resolution to acquire ips of other services
    discovery.method = akka-dns

    cluster {
        shutdown-after-unsuccessful-join-seed-nodes = 60s
    }

    management {
        cluster.bootstrap {
            ## cluster bootstrap discovery method is different from runtime discovery as it uses kubernetes api to get ips
            ## of all pods running the same application
            contact-point-discovery {
                discovery-method =  kubernetes-api
                ## service name that will be used for pod discovery, must be the same as defined in *.yml deployment files
                ## lagom will ask k8s for pods with app=hello label
                service-name = "hello"
                required-contact-point-nr = ${REQUIRED_CONTACT_POINT_NR}
            }
        }
    }
}

cassandra.default {
  ## cassandra service name that will be used for discovery
  contact-points = [${?CASSANDRA_CONTACT_POINT}]
  session-provider = akka.persistence.cassandra.ConfigSessionProvider
}

cassandra-journal {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

cassandra-snapshot-store {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

lagom.persistence.read-side.cassandra {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}


lagom.broker.kafka {
  ## kafka service name that will be used for discovery
  service-name = ${KAFKA_SERVICE_NAME}
}